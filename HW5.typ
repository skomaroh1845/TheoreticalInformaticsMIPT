= Николай Комаров ДЗ №5

#set par(
  justify: true,
)


= Задача 1
Класс NP замкнут относительно операций $union$, $sect$, умножения языков и звездочки Клини.

== Доказательство
1. Замыкание относительно $union$
$square$ 

Если класс замкнут относительно операции $union$, то любое объединение элементов этого класса должно оставаться в самом классе, покажем это.

По определению $L in$ NP $arrow.r.l.double$ $exists$ полином. 0-1 м.т. $M$ и $exists$ многочлен $q$: $forall arrow(x) in {0, 1}^*$ ( $ arrow(x) in L arrow.r.l.double exists arrow(y): abs(arrow(y)) lt.eq.slant q(abs(arrow(x)))$ $M(arrow(y), arrow(x)) = 1$ ), то есть существует подсказка полиномиальной длины с помощью которой за полиномиальное время можно распознавать слова из языка из NP. 

Возьмем два случайных языка из NP, обозначим их за $L$ и $K$, покажем, что $L union K in$ NP.
Пусть у нас есть 0-1 полином. м.т. $M$ распознающая $L$ с подсказкой $arrow(y)$ и 0-1 полином. м.т. $D$ распознающая $K$ с подсказкой $arrow(r)$. Соберем с их помощью общую 0-1 машину $M'$ распознающую $L union K$. Машина $M'$ будет принимать на вход элементы принадлежащие либо $L$, либо $K$ и некоторую посказку полиномиальной длины, затем последовательно применять к ним каждый из алгоритмов машин $M$ и $D$ с подсказкой, при этом мы знаем, что полиномиальная подсказка позволяющая определить принадлежность к языку точно найдется (это либо $arrow(y)$, либо $arrow(r)$, которые точно существуют исходя из того, что языки по отдельности лежат в NP). У нас имеется 4 комбинации алгоритмов машин и подсказок (2 на 2), такми образом у худшем случае машине потребуется константное замедление, чтобы проверить все комбинации алгоритмов с подсказками и показать принадлежность входа языку.

Подобная машина $M'$ выдаст 1, если какая-либо из комбинаций алгоритмов и подсказок дала 1, то есть вход принадлежит одному из языков $L$ или $K$, и 0, если никакая из 4 комбинаций не дала 1, то есть когда вход не принадлежит ни одному из языков. Машина $M'$ состоит из полиномиальных 0-1 машин, которые в худшем случае запускаются 4 раза, поэтому и сама является полиномиальной 0-1 м.т., а также имеет подсказку полиномиальной длины, позволяющую определить относится ли слово к $L union K$.

Отсюда следует, что $L union K in$ NP, так как существует 0-1 полином. м.т. $M'$ распознающая слова из $L union K$ с полиномиальной подсказкой. А из этого следует, что класс NP замкнут относительно операции объединения, так как объединение любых двух элементов из него лежит в нем самом.

#align(right, $square.filled$)

2. Замыкание относительно $sect$
$square$ 

Идейно то же самое, что и в предыдущем пункте, только тут на вход составной машины будет прилетать элемент, принадлежащий обоим языкам сразу и надо смотреть не на то, что хотя бы одна комбинация алгоритма и подсказки выдаст 1, а чтобы оба лгоритма с какой-то из подсказок выдавали 1. В остальном доказательство такое же, как и в предыдущем пункте:

Берем два случайных языка из NP, так как каждый пренадлежит NP, то для каждого найдется 0-1 полином. м.т. распознающая этот язык с полиномиальной подсказкой. 

Из с помощью этих машин конструируем составную 0-1 полином. м.т., которая уже может распознавать пересечение этих языков. 

Таким образом, можем составить 0-1 полином. м.т. распознающую пересечение двух языков из NP с полиномиальной подсказкой, значит и само пересечение этих языков лежит в NP, значит класс NP замкнут относительно операции пересечения.

#align(right, $square.filled$)

3. Замыкание относительно умножения языков
$square$ 

Аналогично

Берем два случайных языка из NP, так как каждый пренадлежит NP, то для каждого найдется 0-1 полином. м.т. распознающая этот язык с полиномиальной подсказкой. 

Из с помощью этих машин конструируем составную 0-1 полином. м.т., которая уже может распознавать умножение этих языков. В данном случае логика составной машины следующая: нужно применять алгоритм первой машины пока она не распознает свою часть слова, таким образом найдем "стык", и от него уже применем алгоритм второй машины. Подобная операция замедлит общую сложность не более чем полином, значит составная машина, состоящая из двух полиномиальных, тоже останется полиномиальной и будет распознавать конкатенацию слов из двух языков.

Таким образом, можем составить 0-1 полином. м.т., распознающую умножение двух языков из NP с полиномиальной подсказкой, значит и сам результат умножения этих языков лежит в NP, значит класс NP замкнут относительно операции умножения языков.

#align(right, $square.filled$)

4. Замыкание относительно звездочки Клини
$square$ 

В предыдущем пункте доказали замкнутость для конкатенации двух строк, теперь распространим это конечное количетво, чтобы получить звуздочку Клини.

Звездочка Клини - по сути конкатенация конечного числа слов из языка, покажем, что результат этой операции тоже лежит в NP.

Из предыдущего пункта конкатенация двух слов из языка из NP лежит в NP. Возьмем этот результат, он сам по себе является словом из языка из NP и сконкатенируем со следующем в последовательности конкатенаций словом, рельутат этой операции тоже будет лежать в NP. Будем продолжать так пока пока все слова в последовательности не кончаться, а это случится ведь звездочка Клини - конкатенация *конечного* числа элементов, в конце получим, что результат последней конкатенации по свойству из п.3 тоже лежит в NP, то есть результат всей операции лежит в NP.

#align(right, $square.filled$)






= Задача 2
Если P = NP, то NP = coNP.

== Доказательство
$square$ 

Пусть P = NP, тогда возьмем язык $L$, который лежит в P и соответсвенно в NP. 
Раз $L in$ NP, тогда по определению $overline(L) in$ сoNP. Также имеем, что раз язык $L in P$, то (из дз №3) и $overline(L) in P$. По условию имеем, что P = NP, значит получили, что $overline(L) in$ NP. Таким образом $overline(L) in$ NP и $overline(L) in$ сoNP одновременно, значит NP = coNP.


#align(right, $square.filled$)

